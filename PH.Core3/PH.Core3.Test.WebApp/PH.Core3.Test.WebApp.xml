<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PH.Core3.Test.WebApp</name>
    </assembly>
    <members>
        <member name="T:PH.Core3.Test.WebApp.Areas.v0.Controllers.ValuesController">
            <summary>
            Controller V0
            </summary>
        </member>
        <member name="T:PH.Core3.Test.WebApp.Areas.v1.Controllers.ValuesController">
            <summary>
            Controller V1
            </summary>
        </member>
        <member name="T:PH.Core3.Test.WebApp.AutofacModules.MainwebModule">
            <summary>
            Main autofac module
            </summary>
            <seealso cref="T:Autofac.Module" />
        </member>
        <member name="M:PH.Core3.Test.WebApp.AutofacModules.MainwebModule.Load(Autofac.ContainerBuilder)">
            <summary>Override to add registrations to the container.</summary>
            <remarks>
            Note that the ContainerBuilder parameter is unique to this module.
            </remarks>
            <param name="builder">The builder through which components can be
            registered.</param>
        </member>
        <member name="T:PH.Core3.Test.WebApp.AutofacModules.LoggingModule">
            <summary>
            
            </summary>
            <seealso cref="T:Autofac.Module" />
        </member>
        <member name="M:PH.Core3.Test.WebApp.HostedService.MailSenderService.#ctor(PH.Core3.AspNetCoreApi.Services.IViewRenderService)">
            <summary>
            Initialize a new instance of <see cref="T:PH.Core3.Common.CoreSystem.CoreDisposable"/>
            </summary>
        </member>
        <member name="M:PH.Core3.Test.WebApp.HostedService.MailSenderService.Dispose(System.Boolean)">
            <summary>
            Dispose Pattern.
            This method check if already <see cref="P:PH.Core3.Common.CoreSystem.CoreDisposable.Disposed"/> (and set it to True).
            </summary>
            <param name="disposing">True if disposing</param>
        </member>
        <member name="M:PH.Core3.Test.WebApp.HostedService.MailSenderService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is ready to start the service.
            </summary>
            <param name="cancellationToken">Indicates that the start process has been aborted.</param>
        </member>
        <member name="M:PH.Core3.Test.WebApp.HostedService.MailSenderService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">Indicates that the shutdown process should no longer be graceful.</param>
        </member>
        <member name="M:PH.Core3.Test.WebApp.HostedService.MailSenderService.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:PH.Core3.Test.WebApp.HttpTenantIdentificationStrategy.TryIdentifyTenant(System.Object@)">
            <summary>
            Attempts to identify the tenant from the current execution context.
            </summary>
            <param name="tenantId">The current tenant identifier.</param>
            <returns>
            <see langword="true" /> if the tenant could be identified; <see langword="false" />
            if not.
            </returns>
        </member>
        <member name="P:PH.Core3.Test.WebApp.Services.EditAlberoDTo.Id">
            <summary>
            Unique Id of current class
            </summary>
        </member>
        <member name="T:PH.Core3.Test.WebApp.Services.AlberoService">
            <summary>
            
            </summary>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.#ctor(PH.Core3.Common.IIdentifier,Microsoft.Extensions.Logging.ILogger{PH.Core3.EntityFramework.Services.Components.Crud.CrudServiceBase{PH.Core3.TestContext.MyContext,PH.Core3.TestContext.Albero,PH.Core3.Test.WebApp.Services.AlberoDTo,PH.Core3.Test.WebApp.Services.NewAlberoDTo,PH.Core3.Test.WebApp.Services.EditAlberoDTo,System.Guid}},PH.Core3.TestContext.MyContext,PH.Core3.Common.Services.Components.Crud.TransientCrudSettings)">
            <summary>
            Init new CRUD Service for Insert/Update/Delete 
            </summary>
            <param name="coreIdentifier">Cross Scope Identifier</param>
            <param name="logger">Logger</param>
            <param name="ctx">Entity Framework DbContext</param>
            <param name="settings">CRUD settings</param>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.ValidatePreDelete(PH.Core3.TestContext.Albero,PH.Core3.Common.Services.Components.Crud.Entities.EntityValidationContext)">
            <summary>
            Async Validation for Delete Entity
            </summary>
            <param name="ent">Entity to Delete</param>
            <param name="c">Custom Validation Context</param>
            <returns>Task</returns>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.ValidatePreUpdate(PH.Core3.TestContext.Albero,PH.Core3.Common.Services.Components.Crud.Entities.EntityValidationContext)">
            <summary>
            Async Validation for Update Entity
            </summary>
            <param name="ent">Entity to Edit</param>
            <param name="c">Custom Validation Context</param>
            <returns>Task</returns>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.ValidatePreInsert(PH.Core3.TestContext.Albero,PH.Core3.Common.Services.Components.Crud.Entities.EntityValidationContext)">
            <summary>
            Async Validation for Insert new Entity
            </summary>
            <param name="ent">Entity to Add</param>
            <param name="c">Custom Validation Context</param>
            <returns>Task</returns>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.MergeWithDtoAsync(PH.Core3.TestContext.Albero,PH.Core3.Test.WebApp.Services.EditAlberoDTo)">
            <summary>
            Merge entity properties with dto properties before perform un update.
            </summary>
            <param name="e">Entity</param>
            <param name="d">Dto</param>
            <returns>Entity with changed properties</returns>
        </member>
        <member name="M:PH.Core3.Test.WebApp.Services.AlberoService.ToDto(PH.Core3.TestContext.Albero)">
            <summary>
            Transform a entity to a dto to return to consuming services.
            </summary>
            <param name="entity">Entity</param>
            <returns>dto</returns>
        </member>
        <member name="P:PH.Core3.Test.WebApp.Services.AlberoService.ServiceIdentifier">
            <summary>
            Service Identifier (a int value representing the service and the service name)
            </summary>
        </member>
        <member name="M:PH.Core3.Test.WebApp.PerRouteApiVersionSelector.SelectVersion(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.Versioning.ApiVersionModel)">
            <summary>
            Selects an API version given the specified HTTP request and API version information.
            </summary>
            <param name="request">The current <see cref="T:Microsoft.AspNetCore.Http.HttpRequest">HTTP request</see> to select the version for.</param>
            <param name="model">The <see cref="T:Microsoft.AspNetCore.Mvc.Versioning.ApiVersionModel">model</see> to select the version from.</param>
            <returns>The selected <see cref="T:Microsoft.AspNetCore.Mvc.ApiVersion">API version</see>.</returns>
        </member>
        <member name="M:PH.Core3.Test.WebApp.SwaggerDefaultValues.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
    </members>
</doc>
